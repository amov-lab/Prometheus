<launch>
	<!-- Launch Gazebo Simulation -->
	<arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.06"/>
    <arg name="Y" default="0.0"/>
	<arg name="world" default="$(find prometheus_gazebo)/worlds/multi_gate.world"/>
	<arg name="sdf" default="$(find prometheus_gazebo)/amov_models/p450_monocular/p450_monocular.sdf"/>
	<arg name="model" default="p450_monocular"/>
    <include file="$(find prometheus_gazebo)/launch_basic/sitl.launch">
	  <arg name="world" value="$(arg world)"/>
	  <arg name="sdf" value="$(arg sdf)"/>
	  <arg name="model" value="$(arg model)"/>
      <arg name="x" value="$(arg x)"/>
      <arg name="y" value="$(arg y)"/>
      <arg name="z" value="$(arg z)"/>
      <arg name="Y" value="$(arg Y)"/>
    </include>

	<!-- run the circle_det -->
    <node pkg="prometheus_detection" type="ellipse_det" name="ellipse_det" output="screen">
        <param name="camera_topic" type="string" value="/prometheus/sensor/monocular_front/image_raw" />
        <param name="camera_info" type="string" value="$(find prometheus_gazebo)/config/camera_config/camera_param_gazebo_monocular.yaml" />
        <param name="with_training" type="bool" value="false" />
        <param name="train_imlist" type="string" value="$(find prometheus_detection)/dataset/ellipse/landing_patches.txt" />
        <param name="train_imdir" type="string" value="$(find prometheus_detection)/dataset/ellipse/landing_patches" />
        <param name="saving_center" type="bool" value="false" />
        <param name="saving_path" type="string" value="$(find prometheus_detection)/dataset/ellipse/images_from_camera" />
    </node>

	<!-- run the circle_crossing.cpp -->
	<node pkg="prometheus_mission" type="circle_crossing" name="circle_crossing" output="screen" launch-prefix="gnome-terminal --">
        <param name="kpx_circle_track" value="0.5" />
        <param name="kpy_circle_track" value="0.5" />
		<param name="kpz_circle_track" value="0.5" />
	</node>	
</launch>
<launch>
	<!-- Launch Gazebo Simulation -->
	<arg name="x" default="-6.5"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.15"/>
    <arg name="Y" default="0.0"/>
	<arg name="world" default="$(find prometheus_gazebo)/worlds/indoor_competition.world"/>
	<arg name="sdf" default="$(find prometheus_gazebo)/models/P300_indoor_competition/P300_indoor_competition.sdf"/>
	<arg name="model" default="P300_indoor_competition"/>
    <include file="$(find prometheus_gazebo)/launch_basic/sitl.launch">
	  <arg name="world" value="$(arg world)"/>
	  <arg name="sdf" value="$(arg sdf)"/>
	  <arg name="model" value="$(arg model)"/>
      <arg name="x" value="$(arg x)"/>
      <arg name="y" value="$(arg y)"/>
      <arg name="z" value="$(arg z)"/>
      <arg name="Y" value="$(arg Y)"/>
    </include>

	<!-- run the circle_det -->
    <node pkg="prometheus_detection" type="ellipse_det" name="ellipse_det" output="screen">
        <param name="camera_topic" type="string" value="/prometheus/Monocular_front/image_raw" />
        <param name="camera_info" type="string" value="camera_param_gazebo_monocular.yaml" />
    </node>

	<!-- 设定局部点云话题-->
	<arg name="topic_of_local_pcl" default="/prometheus/sensors/3Dlidar_scan"/>
	<!-- 启动局部规划算法 -->
	<node pkg="prometheus_local_planning" name="local_planner_main" type="local_planner_main" output="screen">
		<remap from="/prometheus/planning/local_pcl" to="$(arg topic_of_local_pcl)" />
		<!-- 参数 -->
		<!-- 最大速度，设的越小越安全 -->
		<param name="planning/max_planning_vel" value="0.5" type="double"/>
		<!-- 膨胀参数，一般设置为无人机的半径或更大 -->
		<param name="apf/inflate_distance" value="0.3" type="double"/>
		<!-- 感知距离，只考虑感知距离内的障碍物 -->
		<param name="apf/obs_distance" value="5.0" type="double"/>  
		<!-- 增益 -->
		<param name="apf/k_push" value="1.0" type="double"/>
		<param name="apf/k_att" value="0.5" type="double"/>
		<!-- 安全距离，距离障碍物在安全距离内，k_push自动增大 -->
		<param name="apf/min_dist" value="0.1" type="double"/>
		<!-- 最大吸引距离 -->
		<param name="apf/max_att_dist" value="3" type="double"/>
		<!-- 地面高度，不考虑低于地面高度的障碍物 -->
		<param name="apf/ground_height" value="0.3" type="double"/>
		<!-- 地面安全高度，小于该高度，会产生向上推力 -->
		<param name="apf/ground_safe_height" value="0.3" type="double"/>
		<!-- 停止距离，小于该距离，停止自动飞行 -->
		<param name="apf/safe_distance" value="0.01" type="double"/>
	</node>	

    <!-- 启动octomap建图 -->
    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.10" />
        <!-- 发布地图的坐标系 -->
        <param name="frame_id" type="string" value="world" />
        <!-- 传感器最大感知范围 (speedup!) -->
        <param name="sensor_model/max_range" value="5.0" />
        <!-- 局部点云输入,该话题定义在3Dlidar.sdf中 (PointCloud2) -->
        <remap from="cloud_in" to="/prometheus/sensors/3Dlidar_scan" />
    </node>

    <!-- 启动全局规划算法 -->
    <arg name="topic_of_global_pcl" default="/octomap_point_cloud_centers"/>
    <node pkg="prometheus_global_planning" name="global_planner_main" type="global_planner_main" output="screen">
        <remap from="/prometheus/planning/global_pcl" to="$(arg topic_of_global_pcl)" />
        <!-- 参数 -->
        <!-- 停止距离 -->
        <param name="planning/safe_distance" value="0.01" type="double"/>
        <!-- 最大搜索步数 -->
        <param name="astar/allocate_num" value="5000" type="int"/>
        <!-- 启发式函数系数 -->
        <param name="astar/lambda_heu" value="2.0" type="double"/>
        <!-- 分辨率 -->
        <param name="astar/resolution_astar" value="0.1" type="double"/>
        <!-- 障碍物膨胀距离 -->
        <param name="astar/inflate" value="0.8" type="double"/>
        <!-- 地图范围 -->
        <param name="map/map_size_x" value="40.0" type="double"/>
        <param name="map/map_size_y" value="10.0" type="double"/>
        <param name="map/map_size_z" value="2.0" type="double"/>
        <param name="map/origin_x" value="-10.0" type="double"/>
        <param name="map/origin_y" value="-5.0" type="double"/>
        <param name="map/origin_z" value="1.0" type="double"/>
        <param name="map/ceil_height_" value="2.2" type="double"/>
        <param name="map/floor_height_" value="0.01" type="double"/>
    </node>

	<!-- run the color_detection.cpp -->
    <node pkg="prometheus_detection" type="color_line_det.py" name="color_det" output="screen">
        <param name="subscriber" value="/prometheus/Monocular_down/image_raw"/>
        <param name="config" value="camera_param_gazebo_monocular.yaml"/>
        <!-- 线距底边的距离，0-1，0.5表示在图像中间 -->
        <param name="line_location" value="0.5"/>
        <param name="line_location_a1" value="0.5"/>
        <param name="line_location_a2" value="0.8"/>
        <!-- 待检测颜色，没有此颜色时，默认检测黑色，可选：black，red，yellow，green，blue -->
        <param name="line_color" value="black"/>
    </node>

    <!-- run the landpad_det.cpp -->
    <node pkg="prometheus_detection" type="landpad_det" name="landpad_det" output="screen">
        <param name="camera_topic" type="string" value="/prometheus/Monocular_down/image_raw" />
        <param name="camera_info" type="string" value="camera_param_gazebo_monocular.yaml" />
    </node>
    
	<!-- run the indoor_competition.cpp -->
	<node pkg="prometheus_mission" type="indoor_competition" name="indoor_competition" output="screen" launch-prefix="gnome-terminal --">
        <param name="kpx_circle_track" value="0.5" />
        <param name="kpy_circle_track" value="0.5" />
		<param name="kpz_circle_track" value="0.5" />
        <param name="kpx_land" value="0.35" />
        <param name="kpy_land" value="0.35" />
		<param name="kpz_land" value="0.15" />
	</node>	

    <!-- 启动rviz,设为false可关闭 -->
	<arg name="visualization" default="true"/>
	<group if="$(arg visualization)">
        <node type="rviz" name="rviz" pkg="rviz" args="-d $(find prometheus_gazebo)/config/rviz_config/rviz_planning.rviz" />
        <!-- obstacle.world 真实点云 -->
        <node pkg="prometheus_slam" type="pc2_publisher_node" name="pc2_publisher_node" output="screen">	
		    <param name="pcd_path" type="string" value="$(find prometheus_gazebo)/maps/obstacle.pcd" />
	    </node>
    </group>
	

</launch>


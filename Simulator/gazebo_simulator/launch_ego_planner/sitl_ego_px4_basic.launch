<launch>
	<!-- 启动PX4中的SITL功能 -->
	<!-- 这里的环境变量将传递到rcS启动脚本中-->
	<!-- 模型选择 -->
	<!-- 参看 ~/prometheus_px4/ROMFS/px4fmu_common/init.d-posix/1014 solo 中的修改内容 -->
	<env name="PX4_SIM_MODEL" value="solo" />
	<!-- 估计器参数选择 可选ekf2_vision和ekf2 -->
	<!-- ekf2 使用GPS作为定位来源， ekf2_vision 使用外部输入（gazebo真值、slam等）作为定位来源-->
	<!-- 参看 ~/prometheus_px4/ROMFS/px4fmu_common/init.d-posix/rcS 中的修改内容 -->
    <env name="PX4_ESTIMATOR" value="ekf2" />
	<!-- 仿真速度因子 1.0代表与真实时间同步，大于1加快仿真速度，小于1则减慢 （电脑性能较差，可选择减小该参数）-->
	<env name="PX4_SIM_SPEED_FACTOR" value="1.0" />
	<!-- 参数 -->
	<!-- 集群数目 -->
	<arg name="swarm_num" default="1"/>
	<!-- 无人机名字 -->
	<arg name="uav_name" default="/uav1"/>
	<!-- 无人机ID号 -->
	<arg name="uav_id" default="1"/>
	<!-- 指定sdf文件及模型名字 -->
	<arg name="sdf" default="$(find prometheus_gazebo)/amov_models/Multisolo/uav1/uav1.sdf"/>
	<arg name="model" default="uav1"/>
	<!-- 初始位置，Yaw为偏航角 -->
	<arg name="uav_init_x" default="0.0"/>
    <arg name="uav_init_y" default="0.0"/>
	<arg name="uav_init_z" default="0.15"/>
	<arg name="uav_init_yaw" default="0.0"/>
	
	<!-- 使用group标签来对不同的无人机进行分组，因此，不同无人机的话题会带上前缀，如/uav0、/uav1等 -->
	<!-- 理解仿真的四个模块, 其中1和2为必备模块，3和4可缺省 -->
	<!-- 1、PX4_SITL PX4软件在环仿真模块，即代表飞控，这块代码在Firmware中，注意部分代码与实际飞行相同，部分则是独立的代码 -->
	<!-- 2、simulator 仿真器模块，此处即Gazebo，代码为model文件中的plugin -->
	<!-- 3、Offboard模块 即Mavros -->
	<!-- 4、QGC模块 即地面站--> 

	<!-- 可以参考rcS文件，其中有端口号定义 -->
	<!-- 无人机编号（PX4内部参数） 	MAV_SYS_ID = ID + 1 ID从0开始--> 
	<!-- 仿真器端口号（用于飞控与Gazebo进行通讯）	 mavlink_tcp_port（simulator_tcp_port） = 4560 + ID （需要再SDF文件中配置对应的参数 mavlink_tcp_port）-->
	<!-- mavlink_tcp_port（该参数在飞机模型sdf文件中） 这个不能随意指定，必须从4560开始递增，因为这个是遵从gazebo的递增规律 -->
	<!-- Offboard端口号（用于飞控与Mavros进行通讯） udp_offboard_port_local = 14557 + ID -->
	<!-- Offboard端口号（用于飞控与Mavros进行通讯） udp_offboard_port_remote = 14540 + ID -->
	<!-- 10.20备注：由于太多人搞不清这里的端口对应关系和飞控版本切换，因此将端口号改为PX4默认 -->
	<!-- 改为PX4默认的缺点是：最多只支持10架无人机，如果要增加无人机数量可以使用Prometheus_swarm分支，将 14540 改为 24540 ，14557 改为 34580-->


    <!-- n号飞机 -->
    <group ns="$(arg uav_name)">
        <!-- 参数配置-->
		<!-- ID编号 -->
        <arg name="ID" value="$(eval arg('uav_id') - 1)"/>

		<!-- Mavros参数 -->
		<arg name="udp_offboard_port_remote" value="$(eval 14540 + arg('ID'))"/>
		<arg name="udp_offboard_port_local" value="$(eval 14557 + arg('ID'))"/>

		<!-- 启动PX4 SITL，此处参数配置不可删除 -->
		<arg name="interactive" default="true"/>
		<arg unless="$(arg interactive)" name="px4_command_arg1" value=""/>
		<arg     if="$(arg interactive)" name="px4_command_arg1" value="-d"/>
		<node name="sitl_$(arg ID)" pkg="px4" type="px4" output="screen" 
			args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS -i $(arg ID) -w sitl_solo_$(arg ID) $(arg px4_command_arg1)">
		</node>

		<!-- 启动Gazebo模型 -->
		<node name="solo_$(arg ID)_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
			args="-sdf -file $(arg sdf) -model $(arg model) -x $(arg uav_init_x) -y $(arg uav_init_y) -z $(arg uav_init_z) -Y $(arg uav_init_yaw)">
		</node>

		<!-- 启动MAVROS -->
		<node pkg="mavros" type="mavros_node" name="mavros" output="screen">
			<param name="fcu_url" value="udp://:$(arg udp_offboard_port_remote)@localhost:$(arg udp_offboard_port_local)"/>
			<param name="gcs_url" value="" />
			<param name="target_system_id" value="$(eval 1 + arg('ID'))"/>
			<param name="target_component_id" value="1" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/swarm_config/px4_pluginlists.yaml" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/swarm_config/px4_config.yaml" />
		</node>
    </group>
</launch>

